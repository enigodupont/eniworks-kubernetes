apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  labels:
    run: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sonarqube
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        run: sonarqube
    spec:
      initContainers:
        - name: set-sysctl
          image: busybox
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
      containers:
      - name: sonarqube
        image: sonarqube:25.9.0.112764-community
        imagePullPolicy: Always 
        ports:
        - containerPort: 9000
          name: ui-port
        - containerPort: 9001
        - containerPort: 9092
        env:
          - name: SONAR_WEB_HOST
            value: "0.0.0.0"
          - name: SONAR_JDBC_USERNAME
            value: sonar
          - name: SONAR_JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: sonarqube
                key: password
          - name: SONAR_JDBC_URL
            value: jdbc:postgresql://toolbox.eniworks.net.internal/sonar
        resources:
          requests:
            memory: '3Gi'
            cpu: '1'
          limits:
            memory: '3Gi'
            cpu: '1'
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
spec:
  selector:
    run: sonarqube
  ports:
    - name: ui-port
      protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: sonarqube
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`sonarqube.eniworks.net`)
    kind: Rule
    services:
    - name: sonarqube
      port: 9000
      passHostHeader: true
