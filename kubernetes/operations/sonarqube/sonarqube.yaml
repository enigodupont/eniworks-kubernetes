apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  labels:
    run: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      run: sonarqube
  template:
    metadata:
      labels:
        run: sonarqube
    spec:
      containers:
      - name: sonarqube
        # This is OLD and vulnerable to log4shell, I should update when I get more capacity.
        image: sonarqube:7.4-community
        imagePullPolicy: Always 
        ports:
        - containerPort: 9000
        - containerPort: 9001
        - containerPort: 9092
        env:
        - name: SONARQUBE_JDBC_USERNAME
          value: sonar
        - name: SONARQUBE_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube
              key: password
        - name: SONARQUBE_JDBC_URL
          value: jdbc:postgresql://toolbox.eniworks.net/sonar
        resources:
          requests:
            memory: "1Gi"
            cpu: 1
          limits:
            memory: "2Gi"
            cpu: 1
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
spec:
  selector:
    run: sonarqube
  ports:
    - name: ui-port
      protocol: TCP
      port: 9000
      targetPort: 9000
      nodePort: 30900
    - name: ssl-ui-port
      protocol: TCP
      port: 9001
      targetPort: 9001
      nodePort: 30901
    - name: extra-port
      protocol: TCP
      port: 9092
      targetPort: 9092
      nodePort: 30992
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-ui
spec:
  selector:
    run: sonarqube
  ports:
    - name: ui-port
      protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP
#---
#apiVersion: traefik.containo.us/v1alpha1
#kind: IngressRoute
#metadata:
#  name: sonarqube
#spec:
#  entryPoints:
#    - web
#  routes:
#  - match: Host(`sonarqube.eniworks.net`)
#    kind: Rule
#    services:
#    - name: sonarqube-ui
#      port: 9000
#      passHostHeader: true